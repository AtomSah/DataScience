right_join(population_data, by = c("ShortPostcode" = "Short.Postcode", `relationship = "many-to-many"`)) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
crime_dataset <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("ShortPostcode" = "Short.Postcode", relationship = "many-to-many")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
colnames(population_data)
colnames(crime_data)
crime_dataset <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("ShortPostcode" = "Short.Postcode", relationship = "many-to-many")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
crime_dataset <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n)
colnames(crime_dataset)
crime_dataset <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("ShortPostcode" = "Short.Postcode", relationship = "many-to-many")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
crime_dataset <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("ShortPostcode" = "Short.Postcode", relationship = "many-to-many"))
colnames(population_data)
colnames(crime_data)
crime_dataset <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("ShortPostcode" = "Short.Postcode")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
crime_dataset <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c(ShortPostcode = "Short.Postcode")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
crime_dataset <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c(ShortPostcode = "Short.Postcode", relationship = "many-to-many")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
view(population_data)
view(crime_data)
crime_dataset <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("ShortPostcode" = "Short.Postcode", relationship = "many-to-many")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
crime_data_modified <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("Short.Postcode" = "ShortPostcode", relationship = "many-to-many")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
crime_data_modified <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("Short.Postcode" = "ShortPostcode")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
crime_data_modifi <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("ShortPostcode" = "Short.Postcode")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
View(crime_data_modified)
crime_data_modified <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("ShortPostcode" = "Short.Postcode")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
View(crime_data_modified)
grouped_drugcrime <- crime_data_modified %>%
filter(Year == "2022") %>%
group_by(`Town/City`) %>%
summarise(Drug_Offence_Rate = mean(Drug_Offence_Rate, na.rm = TRUE))
#joining house price data and drug crime rate data in a single table
houseprice_drugcrime_data = grouped_house %>%
left_join(grouped_drug_crime,by="Town/City") %>%
na.omit #removing null values
houseprice_drugcrime_data = grouped_house %>%
left_join(grouped_drugcrime,by="Town/City") %>%
na.omit #removing null values
l_model = lm(data=houseprice_drugcrime_data, Price~`Drug_Offence_Rate`)
#this model predicts House Price as a function of Drug offence rate
#showing summary of the Linear Model
summary(l_model)
#creating the linear model graph
ggplot(house_price_drug_crime_data,aes(x=`Drug_Offence_Rate`,y=Price)) +
scale_y_continuous(limits=c(0,1000000), breaks = seq(0,1000000,200000))+ #setting limits and breaks
geom_point(color = "blue") + # All points in a single color
#setting color as blue for Surrey's data point
geom_smooth(method=lm,se=FALSE,color="orange")+ #adding linear regression line and omitting error bands
labs(x="Drug Offence Rate",
y="Price",
title="2022 House Prices vs Drug Offence Rate",color="County") #setting labels
ggplot(houseprice_drugcrime_data,aes(x=`Drug_Offence_Rate`,y=Price)) +
scale_y_continuous(limits=c(0,1000000), breaks = seq(0,1000000,200000))+ #setting limits and breaks
geom_point(color = "blue") + # All points in a single color
#setting color as blue for Surrey's data point
geom_smooth(method=lm,se=FALSE,color="orange")+ #adding linear regression line and omitting error bands
labs(x="Drug Offence Rate",
y="Price",
title="2022 House Prices vs Drug Offence Rate",color="County") #setting labels
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
# Load the cleaned school and housing datasets
school_data <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/school/cleaned_school.csv", show_col_types = FALSE)
housing_data <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/housing/house_selling_clean.csv", show_col_types = FALSE)
#grouping house prices by town and county and finding average price for each group
grouped_house_data = housing_data %>%
filter(`SaleYear`=="2022") %>%
group_by(`Town/City`,County) %>%
mutate(`Town/City` = tolower(`Town/City`)) %>% #converting the town from uppercase to all lowercase
summarise(Price=mean(Price))
grouped_school_data = school_data %>%
filter(`Year`=="2022-2023") %>%
group_by(`Town`,County) %>%
mutate(Town= tolower(Town)) %>%  #converting the town from to all lowercase
summarise(`Attainment Score`=mean(`Attainment_8_Score`))
#joining school data and house price data in a single table
school_houseprice_data = grouped_school_data %>%
left_join(grouped_house_prices,by=c("Town"="Town/City")) %>%
na.omit #removing rows with null value
grouped_house_data = housing_data %>%
filter(`SaleYear`=="2022") %>%
group_by(`Town/City`,County) %>%
mutate(`Town/City` = tolower(`Town/City`)) %>% #converting the town from uppercase to all lowercase
summarise(Price=mean(Price))
#grouping school data by town and county and finding average score for each group
grouped_school_data = school_data %>%
filter(`Year`=="2022-2023") %>%
group_by(`Town`,County) %>%
mutate(Town= tolower(Town)) %>%  #converting the town from to all lowercase
summarise(`Attainment Score`=mean(`Attainment_8_Score`))
school_houseprice_data = grouped_school_data %>%
left_join(grouped_house_prices,by=c("Town"="Town/City")) %>%
na.omit #removing rows with null value
#joining school data and house price data in a single table
school_houseprice_data = grouped_school_data %>%
left_join(grouped_house_data,by=c("Town"="Town/City")) %>%
na.omit #removing rows with null value
#joining school data and house price data in a single table
school_houseprice_final = grouped_school_data %>%
left_join(grouped_house_data,by=c("Town"="Town/City")) %>%
na.omit #removing rows with null value
#creating a linear model
l_model = lm(data=school_houseprice_final, `Attainment Score`~Price)
colnames(school_houseprice_final)
#creating a linear model
l_model = lm(data=school_houseprice_final, `Attainment Score`~Price)
#showing summary of the Linear Model
summary(l_model)
options(scipen = 999)
#creating the linear model graph
ggplot(school_houseprice_final, aes(x = Price, y = `Attainment Score`)) +
scale_y_continuous(limits = c(0, 80), breaks = seq(0, 80, 5)) + # Setting limits and breaks
geom_point(color = "blue") + # All points in a single color
geom_smooth(method = "lm", se = FALSE, color = "black") + # Adding linear regression line and omitting error bands
labs(x = "House Price",
y = "Attainment Score",
title = "2022 Attainment Score vs House Prices") + # Setting labels
theme_minimal()
#showing summary of the Linear Model
summary(l_model)
options(scipen = 999)
#creating the linear model graph
ggplot(school_houseprice_final, aes(x = Price, y = `Attainment Score`)) +
scale_y_continuous(limits = c(0, 80), breaks = seq(0, 80, 5)) + # Setting limits and breaks
geom_point(color = "blue") + # All points in a single color
geom_smooth(method = "lm", se = FALSE, color = "black") + # Adding linear regression line and omitting error bands
labs(x = "House Price",
y = "Attainment Score",
title = "2022 Attainment Score vs House Prices") + # Setting labels
theme_minimal()
#creating a linear model
l_model = lm(data=school_houseprice_final, `Attainment Score`~Price)
View(school_houseprice_final)
grouped_house_data = housing_data %>%
filter(`SaleYear`=="2022") %>%
group_by(`Town/City`,County) %>%
mutate(`Town/City` = tolower(`Town/City`)) %>% #converting the town from uppercase to all lowercase
summarise(Price=mean(Price))
grouped_school_data = school_data %>%
filter(`Year`=="2022-2023") %>%
group_by(`Town`,County) %>%
mutate(Town= tolower(Town)) %>%  #converting the town from to all lowercase
summarise(`Attainment Score`=mean(`Attainment_8_Score`))
view(grouped_house_data)
view(grouped_school_data)
view(school_data)
view(school_data)
view(grouped_school_data)
grouped_school_data = school_data %>%
filter(`Year`=="2022-2023")
view(grouped_school_data)
grouped_school_data = school_data %>%
filter(`Year`=="2021-2022") %>%
group_by(`Town`,County) %>%
mutate(Town= tolower(Town)) %>%  #converting the town from to all lowercase
summarise(`Attainment Score`=mean(`Attainment_8_Score`))
view(grouped_school_data)
school_houseprice_final = grouped_school_data %>%
left_join(grouped_house_data,by=c("Town"="Town/City")) %>%
na.omit #removing rows with null value
#creating a linear model
l_model = lm(data=school_houseprice_final, `Attainment Score`~Price)
#showing summary of the Linear Model
summary(l_model)
options(scipen = 999)
#creating the linear model graph
ggplot(school_houseprice_final, aes(x = Price, y = `Attainment Score`)) +
scale_y_continuous(limits = c(0, 80), breaks = seq(0, 80, 5)) + # Setting limits and breaks
geom_point(color = "blue") + # All points in a single color
geom_smooth(method = "lm", se = FALSE, color = "black") + # Adding linear regression line and omitting error bands
labs(x = "House Price",
y = "Attainment Score",
title = "2022 Attainment Score vs House Prices") + # Setting labels
theme_minimal()
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
#importing population dataset
population_data <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/Population/Cleaned_Population_Data.csv")
# Importing the cleaned school dataset
crime_data <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/Crime/cleaned_crime_final.csv")
#importing population dataset
population_data <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/Population/Cleaned_Population_Data.csv")
# Importing the cleaned school dataset
crime_data <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/Crime/cleaned_crime_final.csv")
#importing the cleaned broadband speed
cleaned_broadband_speed= read_csv("D:/sem4/data science for developers/DataScience/DataScience/BroadBand/cleaned_broadband.csv")
colnames(broadband_speed)
#grouping broadband speed by town and county and finding average download speed for each group
grouped_broadband = broadband_speed %>%
group_by(`Town/City`,County) %>%
summarise(`AvgDownloadspeed`= mean(`AvgDownloadspeed"`))
broadband_speed= read_csv("D:/sem4/data science for developers/DataScience/DataScience/BroadBand/cleaned_broadband.csv")
colnames(broadband_speed)
grouped_broadband = broadband_speed %>%
group_by(`Town/City`,County) %>%
summarise(`AvgDownloadspeed"`= mean(`AvgDownloadspeed`))
View(grouped_broadband)
crime_dataset_drugs <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("ShortPostcode" = "Short.Postcode")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
View(crime_dataset_drugs)
colnames(pop)
colnames(popu)
colnames(population_data)
crime_dataset_drugs <- crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("ShortPostcode" = "Short Postcode")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
View(crime_dataset_drugs)
grouped_drug_crime <- crime_dataset_drugs %>%
filter(Year == "2022") %>%
group_by(`Town/City`) %>%
summarise(Drug_Offence_Rate = mean(Drug_Offence_Rate, na.rm = TRUE))
View(grouped_drug_crime)
broadband_crime_data = grouped_broadband %>%
left_join(grouped_drug_crime,by="Town/City") %>%
na.omit #removing null values
view(broadband_crime_data)
l_model = lm(data=broadband_crime_data, `AvgDownloadspeed`~`Drug_Offence_Rate`)
l_model = lm(data=broadband_crime_data, AvgDownloadspeed~`Drug_Offence_Rate`)
grouped_broadband = broadband_speed %>%
group_by(`Town/City`,County) %>%
summarise(`AvgDownloadspeed`= mean(`AvgDownloadspeed`))
View(grouped_broadband)
#creating a linear model
l_model = lm(data=broadband_crime_data, AvgDownloadspeed~`Drug_Offence_Rate`)
#creating a linear model
l_model = lm(data=broadband_crime_data, `AvgDownloadspeed`~`Drug_Offence_Rate`)
#showing summary of the Linear Model
summary(l_model)
#creating the linear model graph
ggplot(broadband_crime_data,aes(x=`Drug_Offence_Rate`,y=`AvgDownloadspeed`)) +
scale_y_continuous(limits=c(0,50), breaks = seq(0,50,5))+ #setting limits and breaks
geom_point(color = "blue") + # All points in a single color
#setting color as blue for Surrey's data point
geom_smooth(method=lm,se=FALSE,color="green")+ #adding linear regression line and omitting error bands
labs(x="Drug Offence Rate",
y="Average Download Speed (Mbit/s)",
title="2022 Average Download Speed vs Drug Offence Rate",color="County") #setting labels
view(broadband_crime_data)
#creating a linear model
l_model = lm(data=broadband_crime_data, `AvgDownloadspeed"`~`Drug_Offence_Rate`)
#this model predicts Average download speed as a function of Drug offence rate
#showing summary of the Linear Model
summary(l_model)
#creating the linear model graph
ggplot(broadband_crime_data,aes(x=`Drug_Offence_Rate`,y=`AvgDownloadspeed"`)) +
scale_y_continuous(limits=c(0,50), breaks = seq(0,50,5))+ #setting limits and breaks
geom_point(color = "blue") + # All points in a single color
#setting color as blue for Surrey's data point
geom_smooth(method=lm,se=FALSE,color="green")+ #adding linear regression line and omitting error bands
labs(x="Drug Offence Rate",
y="Average Download Speed (Mbit/s)",
title="2022 Average Download Speed vs Drug Offence Rate",color="County") #setting labels
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
population_data <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/Population/Cleaned_Population_Data.csv")
# Importing the cleaned school dataset
cleaned_school_dataset <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/school/cleaned_school.csv")
# Importing the cleaned crime dataset
cleaned_crime_dataset <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/Crime/cleaned_crime_final.csv")
grouped_school_data <- cleaned_school_data %>%
filter(Year == "2021-2022") %>%
group_by(Town, County) %>%
mutate(Town = tolower(Town)) %>%  # Converting the town to lowercase
summarise(Attainment_Score = mean(Attainment_8_Score, na.rm = TRUE))
population_data <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/Population/Cleaned_Population_Data.csv")
# Importing the cleaned school dataset
cleaned_school_data <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/school/cleaned_school.csv")
# Importing the cleaned crime dataset
cleaned_crime_data <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/Crime/cleaned_crime_final.csv")
grouped_school_data <- cleaned_school_data %>%
filter(Year == "2021-2022") %>%
group_by(Town, County) %>%
mutate(Town = tolower(Town)) %>%  # Converting the town to lowercase
summarise(Attainment_Score = mean(Attainment_8_Score, na.rm = TRUE))
crime_dataset_drugs <- cleaned_crime_data %>%
group_by(ShortPostcode, CrimeType, Year, Month, `Town/City`) %>%
select(ShortPostcode, CrimeType, Year, Month,`Town/City`) %>%
na.omit() %>%
tally() %>%  # Creating crime count column
rename(Crime_Count = n) %>%
right_join(population_data, by = c("ShortPostcode" = "Short Postcode")) %>%
select(ShortPostcode, CrimeType, Crime_Count, Population, Year, Month, `Town/City`) %>%
na.omit() %>%
filter(CrimeType == "Drugs") %>%  # Filtering to show only drug crimes of 2022
mutate(Drug_Offence_Rate = (Crime_Count / Population))  # Calculating drug offence rate
View(crime_dataset_drugs)
grouped_drug_crime <- crime_dataset_drugs %>%
filter(Year == "2022") %>%
group_by(`Town/City`) %>%
mutate(`Town/City` = tolower(`Town/City`)) %>%  # Converting the town to lowercase
summarise(Drug_Offence_Rate = mean(Drug_Offence_Rate, na.rm = TRUE))
View(grouped_drug_crime)
school_drug_data <- grouped_school_data %>%
left_join(grouped_drug_crime, by = c("Town" = "Town/City")) %>%
na.omit()  # Removing rows with null values
school_drug <- grouped_school_data %>%
left_join(grouped_drug_crime, by = c("Town" = "Town/City")) %>%
na.omit()  # Removing rows with null values
# Creating a linear model
l_model <- lm(data = school_drug, Attainment_Score ~ Drug_Offence_Rate)
# Showing summary of the linear model
summary(l_model)
ggplot(school_drug, aes(x = Drug_Offence_Rate, y = Attainment_Score)) +
scale_y_continuous(limits = c(0, 50), breaks = seq(0, 50, 5)) +  # Setting limits and breaks
geom_point(color = "blue") + # All points in a single color
geom_smooth(method = lm, se = FALSE, color = "brown") +  # Adding linear regression line and omitting error bands
labs(x = "Drug Offence Rate",
y = "Attainment Score",
title = "2022 Attainment Score vs Drug Offence Rate",
color = "County")  # Setting labels
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
#importing the cleaned broadband speed
broadband_speed= read_csv("D:/sem4/data science for developers/DataScience/DataScience/BroadBand/cleaned_broadband.csv")
#importing the cleaned school dataset
cleaned_school_data <- read_csv("D:/sem4/data science for developers/DataScience/DataScience/school/cleaned_school.csv")
grouped_broadband = broadband_speed %>%
group_by(`Town/City`,County) %>%
mutate(`Town/City`= tolower(`Town/City`)) %>%  #converting the town from to all lowercase
summarise(`AvgDownloadspeed`= mean(`AvgDownloadspeed`))
View(grouped_broadband)
grouped_school_data = cleaned_school_data %>%
filter(`Year`=="2022-2023") %>%
group_by(`Town`,County) %>%
mutate(Town= tolower(Town)) %>%  #converting the town from to all lowercase
summarise(`Attainment Score`=mean(`Attainment_8_Score`))
View(grouped_school_data)
grouped_school_data = cleaned_school_data %>%
filter(`Year`=="2021-2022") %>%
group_by(`Town`,County) %>%
mutate(Town= tolower(Town)) %>%  #converting the town from to all lowercase
summarise(`Attainment Score`=mean(`Attainment_8_Score`))
View(grouped_school_data)
broadband_attainment = grouped_broadbands %>%
left_join(grouped_school_data,by=c("Town/City"="Town")) %>%
na.omit #removing rows with null value
#joining broadband data and school data in a single table
broadband_attainment = grouped_broadband %>%
left_join(grouped_school_data,by=c("Town/City"="Town")) %>%
na.omit #removing rows with null value
View(broadband_attainment)
#creating a linear model
l_model = lm(data=broadband_attainment, `AvgDownloadspeed`~`Attainment Score`) #this model predicts Average download speed as a function of Drug offence rate
#showing summary of the Linear Model
summary(l_model)
#creating the linear model graph
ggplot(broadband_attainment,aes(x=`Attainment Score`,y=`Average download speed (Mbit/s)`)) +
scale_y_continuous(limits = c(0, 80), breaks = seq(0, 80, 5)) + # Setting limits and breaks
geom_point(color = "blue") + # All points in a single color
geom_smooth(method=lm,se=FALSE,color="black")+ #adding linear regression line and omitting error bands
labs(x="Attainment Score",
y="Average Download Speed (Mbit/s)",
title="Average Download Speed vs Attainment Score",color="County") #setting labels
#creating a linear model
l_model = lm(data=broadband_attainment, `AvgDownloadspeed`~`Attainment Score`) #this model predicts Average download speed as a function of Drug offence rate
#showing summary of the Linear Model
summary(l_model)
#creating the linear model graph
ggplot(broadband_attainment,aes(x=`Attainment Score`,y=`AvgDownloadspeed`)) +
scale_y_continuous(limits = c(0, 80), breaks = seq(0, 80, 5)) + # Setting limits and breaks
geom_point(color = "blue") + # All points in a single color
geom_smooth(method=lm,se=FALSE,color="black")+ #adding linear regression line and omitting error bands
labs(x="Attainment Score",
y="Average Download Speed (Mbit/s)",
title="Average Download Speed vs Attainment Score",color="County") #setting labels
ggsave("D:/Data Assignment/Code/Linear Model/Avg_Download_Speed_vs_Attainment_Score.png", width = 10, height = 6)
